<?php

/**
 * An√°lisis del comportamiento del env√≠o de correos de verificaci√≥n
 * en EmploymentHistoryStep.php
 * 
 * Este an√°lisis examina el c√≥digo para determinar cu√°ndo se env√≠an los correos:
 * 1. Al crear una nueva compa√±√≠a
 * 2. Al seleccionar una compa√±√≠a existente
 * 3. Al actualizar una compa√±√≠a existente
 */

echo "\n" . str_repeat('=', 70) . "\n";
echo "AN√ÅLISIS DEL COMPORTAMIENTO DE ENV√çO DE CORREOS DE VERIFICACI√ìN\n";
echo str_repeat('=', 70) . "\n";

echo "\n=== AN√ÅLISIS DEL C√ìDIGO ===\n";

// Leer el archivo EmploymentHistoryStep.php
$filePath = __DIR__ . '/app/Livewire/Driver/Steps/EmploymentHistoryStep.php';

if (!file_exists($filePath)) {
    echo "‚úó Error: No se encontr√≥ el archivo EmploymentHistoryStep.php\n";
    exit(1);
}

$content = file_get_contents($filePath);

echo "\n1. AN√ÅLISIS DEL M√âTODO sendBulkVerificationEmails()\n";
echo str_repeat('-', 50) . "\n";

// Extraer la consulta SQL del m√©todo sendBulkVerificationEmails
preg_match('/\$driverCompanies = DriverEmploymentCompany::where.*?->get\(\);/s', $content, $matches);

if ($matches) {
    echo "‚úì Consulta SQL encontrada:\n";
    $query = trim($matches[0]);
    echo "  $query\n\n";
    
    echo "CONDICIONES PARA ENV√çO DE CORREO:\n";
    echo "- user_driver_detail_id = \$this->driverId\n";
    echo "- (email_sent = false OR email_sent IS NULL)\n";
    echo "- email IS NOT NULL\n\n";
} else {
    echo "‚úó No se encontr√≥ la consulta SQL\n";
}

echo "\n2. AN√ÅLISIS DEL M√âTODO saveEmploymentHistoryData()\n";
echo str_repeat('-', 50) . "\n";

// Buscar c√≥mo se maneja email_sent al crear nuevas compa√±√≠as
if (strpos($content, "'email_sent' => \$company['email_sent'] ?? false") !== false) {
    echo "‚úì Al CREAR nueva compa√±√≠a:\n";
    echo "  - email_sent se establece como: \$company['email_sent'] ?? false\n";
    echo "  - Esto significa: false por defecto\n\n";
}

// Buscar c√≥mo se maneja email_sent al actualizar compa√±√≠as existentes
if (strpos($content, "->update([") !== false) {
    echo "‚úì Al ACTUALIZAR compa√±√≠a existente:\n";
    echo "  - email_sent NO se modifica en el update()\n";
    echo "  - Mantiene su valor anterior\n\n";
}

echo "\n3. AN√ÅLISIS DEL M√âTODO selectCompany()\n";
echo str_repeat('-', 50) . "\n";

// Buscar el m√©todo selectCompany
if (strpos($content, "public function selectCompany(\$companyId)") !== false) {
    echo "‚úì Al SELECCIONAR compa√±√≠a existente:\n";
    echo "  - Se crea un nuevo registro en DriverEmploymentCompany\n";
    echo "  - email_sent se establece como false (por defecto)\n";
    echo "  - Se considera como nueva relaci√≥n empleado-compa√±√≠a\n\n";
}

echo "\n4. FLUJO COMPLETO\n";
echo str_repeat('-', 50) . "\n";

echo "M√âTODO next():\n";
echo "1. Valida datos\n";
echo "2. Llama a saveEmploymentHistoryData()\n";
echo "3. Llama a sendBulkVerificationEmails()\n";
echo "4. Avanza al siguiente paso\n\n";

echo "\n" . str_repeat('=', 70) . "\n";
echo "CONCLUSIONES BASADAS EN EL AN√ÅLISIS DEL C√ìDIGO\n";
echo str_repeat('=', 70) . "\n";

echo "\nüìß CU√ÅNDO SE ENV√çAN LOS CORREOS:\n";
echo "\n1. ‚úÖ NUEVA COMPA√ë√çA (crear desde cero):\n";
echo "   - Se crea MasterCompany (si no existe)\n";
echo "   - Se crea DriverEmploymentCompany con email_sent = false\n";
echo "   - sendBulkVerificationEmails() la encuentra y env√≠a correo\n";
echo "   - Resultado: S√ç SE ENV√çA CORREO\n";

echo "\n2. ‚úÖ COMPA√ë√çA EXISTENTE (seleccionar de lista):\n";
echo "   - Se usa MasterCompany existente\n";
echo "   - Se crea NUEVO DriverEmploymentCompany con email_sent = false\n";
echo "   - sendBulkVerificationEmails() la encuentra y env√≠a correo\n";
echo "   - Resultado: S√ç SE ENV√çA CORREO\n";

echo "\n3. ‚ùå COMPA√ë√çA YA PROCESADA (actualizar existente):\n";
echo "   - Se actualiza DriverEmploymentCompany existente\n";
echo "   - email_sent mantiene su valor (probablemente true)\n";
echo "   - sendBulkVerificationEmails() NO la encuentra\n";
echo "   - Resultado: NO SE ENV√çA CORREO\n";

echo "\n" . str_repeat('=', 70) . "\n";
echo "RESPUESTA A LA PREGUNTA DEL USUARIO\n";
echo str_repeat('=', 70) . "\n";

echo "\nü§î PREGUNTA: \"¬øEsto solo se dispara cuando creo una compa√±√≠a nueva?\"\n";
echo "\nüìã RESPUESTA: NO, se dispara en DOS casos:\n";
echo "\n   1Ô∏è‚É£  Al CREAR una compa√±√≠a completamente nueva\n";
echo "   2Ô∏è‚É£  Al SELECCIONAR una compa√±√≠a existente de la lista\n";
echo "\nüí° EXPLICACI√ìN:\n";
echo "   - Cada vez que agregas una compa√±√≠a al historial del driver\n";
echo "   - Se crea un NUEVO registro en DriverEmploymentCompany\n";
echo "   - Este nuevo registro tiene email_sent = false\n";
echo "   - Por eso se env√≠a el correo de verificaci√≥n\n";

echo "\nüîÑ COMPORTAMIENTO ACTUAL:\n";
echo "   ‚úÖ Nueva compa√±√≠a ‚Üí Correo se env√≠a\n";
echo "   ‚úÖ Compa√±√≠a existente seleccionada ‚Üí Correo se env√≠a\n";
echo "   ‚ùå Compa√±√≠a ya en el historial ‚Üí Correo NO se env√≠a\n";

echo "\n‚ö†Ô∏è  IMPORTANTE:\n";
echo "   - Una vez enviado el correo, email_sent = true\n";
echo "   - Si editas esa misma compa√±√≠a, NO se vuelve a enviar\n";
echo "   - Solo se env√≠a UNA VEZ por cada relaci√≥n empleado-compa√±√≠a\n";

echo "\n" . str_repeat('=', 70) . "\n";
echo "SIMULACI√ìN DE ESCENARIOS\n";
echo str_repeat('=', 70) . "\n";

echo "\nüìù ESCENARIO 1: Usuario crea \"ABC Transport\" desde cero\n";
echo "   1. Se crea MasterCompany \"ABC Transport\"\n";
echo "   2. Se crea DriverEmploymentCompany (email_sent = false)\n";
echo "   3. sendBulkVerificationEmails() encuentra el registro\n";
echo "   4. ‚úÖ Se env√≠a correo a ABC Transport\n";
echo "   5. email_sent se actualiza a true\n";

echo "\nüìù ESCENARIO 2: Usuario selecciona \"XYZ Logistics\" de la lista\n";
echo "   1. Se usa MasterCompany existente \"XYZ Logistics\"\n";
echo "   2. Se crea NUEVO DriverEmploymentCompany (email_sent = false)\n";
echo "   3. sendBulkVerificationEmails() encuentra el registro\n";
echo "   4. ‚úÖ Se env√≠a correo a XYZ Logistics\n";
echo "   5. email_sent se actualiza a true\n";

echo "\nüìù ESCENARIO 3: Usuario edita fechas de \"ABC Transport\" ya agregada\n";
echo "   1. Se actualiza DriverEmploymentCompany existente\n";
echo "   2. email_sent sigue siendo true (no se cambia)\n";
echo "   3. sendBulkVerificationEmails() NO encuentra el registro\n";
echo "   4. ‚ùå NO se env√≠a correo\n";

echo "\n" . str_repeat('=', 70) . "\n";
echo "RECOMENDACI√ìN PARA TESTING\n";
echo str_repeat('=', 70) . "\n";

echo "\nüß™ PARA PROBAR EL COMPORTAMIENTO:\n";
echo "\n1. Limpia los logs de Laravel:\n";
echo "   php artisan log:clear\n";

echo "\n2. Ve al formulario de Employment History\n";

echo "\n3. Agrega una compa√±√≠a nueva:\n";
echo "   - Crea \"Test Company 1\" con email test1@example.com\n";
echo "   - Completa el formulario y avanza al siguiente paso\n";
echo "   - Revisa logs: deber√≠a mostrar \"Correo enviado\"\n";

echo "\n4. Agrega una compa√±√≠a existente:\n";
echo "   - Selecciona una compa√±√≠a de la lista\n";
echo "   - Completa fechas y avanza al siguiente paso\n";
echo "   - Revisa logs: deber√≠a mostrar \"Correo enviado\"\n";

echo "\n5. Edita una compa√±√≠a ya agregada:\n";
echo "   - Cambia fechas de una compa√±√≠a ya en la lista\n";
echo "   - Avanza al siguiente paso\n";
echo "   - Revisa logs: NO deber√≠a enviar correo\n";

echo "\nüìä COMANDOS √öTILES PARA VERIFICAR:\n";
echo "   - Ver logs: tail -f storage/logs/laravel.log\n";
echo "   - Ver emails en BD: SELECT * FROM employment_verification_tokens;\n";
echo "   - Ver compa√±√≠as: SELECT id, email, email_sent FROM driver_employment_companies;\n";

echo "\n" . str_repeat('=', 70) . "\n";
echo "‚úÖ AN√ÅLISIS COMPLETADO\n";
echo str_repeat('=', 70) . "\n\n";